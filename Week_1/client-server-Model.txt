ðŸ“’ Day 2 â€“ Client-Server Model (Short Notes)
Definition
Client: Requests data/services (e.g., browser, mobile app).

Server: Processes requests, sends responses (connected to database).

Flow
arduino
Copy
Edit
Client â†’ Request â†’ Server â†’ Database â†’ Response â†’ Client
Key Points
Client â€“ Runs on userâ€™s device, sends requests.

Server â€“ Runs 24/7, processes requests, queries database.

Database â€“ Stores and retrieves data.

Types
Two-Tier: Client â†” Server

Three-Tier: Client â†” App Server â†” Database

Multi-Tier: More than 3 layers (large systems).

Why Important
Foundation of all web & mobile systems.

Helps in scaling, optimizing performance, and reducing latency.


******************************************************************
1. Vertical Scaling (Scale Up)

Add more power (CPU, RAM, Storage) to one machine.
Simple but has limits.
Example: Upgrading from 8GB RAM â†’ 64GB RAM.
Pros: Easy, less complex.
Cons: Expensive, hardware limits, single point of failure.


2. Horizontal Scaling (Scale Out)
Add more machines/servers to share the load.
Requires load balancer.
Example: Instead of 1 supercomputer, use 10 normal servers.
Pros: No hard limit, fault tolerance, cost-effective.
Cons: More complex to manage.